/*
 * This file is generated by jOOQ.
 */
package org.jooq.inova.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.inova.Inova;
import org.jooq.inova.Keys;
import org.jooq.inova.tables.records.DisciplinasRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Disciplinas extends TableImpl<DisciplinasRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>inova.disciplinas</code>
     */
    public static final Disciplinas DISCIPLINAS = new Disciplinas();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DisciplinasRecord> getRecordType() {
        return DisciplinasRecord.class;
    }

    /**
     * The column <code>inova.disciplinas.iddisciplinas</code>.
     */
    public final TableField<DisciplinasRecord, Integer> IDDISCIPLINAS = createField(DSL.name("iddisciplinas"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>inova.disciplinas.nome</code>.
     */
    public final TableField<DisciplinasRecord, String> NOME = createField(DSL.name("nome"), SQLDataType.VARCHAR(45), this, "");

    private Disciplinas(Name alias, Table<DisciplinasRecord> aliased) {
        this(alias, aliased, null);
    }

    private Disciplinas(Name alias, Table<DisciplinasRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>inova.disciplinas</code> table reference
     */
    public Disciplinas(String alias) {
        this(DSL.name(alias), DISCIPLINAS);
    }

    /**
     * Create an aliased <code>inova.disciplinas</code> table reference
     */
    public Disciplinas(Name alias) {
        this(alias, DISCIPLINAS);
    }

    /**
     * Create a <code>inova.disciplinas</code> table reference
     */
    public Disciplinas() {
        this(DSL.name("disciplinas"), null);
    }

    public <O extends Record> Disciplinas(Table<O> child, ForeignKey<O, DisciplinasRecord> key) {
        super(child, key, DISCIPLINAS);
    }

    @Override
    public Schema getSchema() {
        return Inova.INOVA;
    }

    @Override
    public UniqueKey<DisciplinasRecord> getPrimaryKey() {
        return Keys.KEY_DISCIPLINAS_PRIMARY;
    }

    @Override
    public List<UniqueKey<DisciplinasRecord>> getKeys() {
        return Arrays.<UniqueKey<DisciplinasRecord>>asList(Keys.KEY_DISCIPLINAS_PRIMARY);
    }

    @Override
    public Disciplinas as(String alias) {
        return new Disciplinas(DSL.name(alias), this);
    }

    @Override
    public Disciplinas as(Name alias) {
        return new Disciplinas(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Disciplinas rename(String name) {
        return new Disciplinas(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Disciplinas rename(Name name) {
        return new Disciplinas(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
