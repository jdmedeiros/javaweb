/*
 * This file is generated by jOOQ.
 */
package org.jooq.inova.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.inova.tables.Cursodis;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CursodisRecord extends UpdatableRecordImpl<CursodisRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>inova.cursodis.idcursos</code>.
     */
    public void setIdcursos(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>inova.cursodis.idcursos</code>.
     */
    public Integer getIdcursos() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>inova.cursodis.iddisciplinas</code>.
     */
    public void setIddisciplinas(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>inova.cursodis.iddisciplinas</code>.
     */
    public Integer getIddisciplinas() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>inova.cursodis.horas</code>.
     */
    public void setHoras(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>inova.cursodis.horas</code>.
     */
    public Integer getHoras() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Cursodis.CURSODIS.IDCURSOS;
    }

    @Override
    public Field<Integer> field2() {
        return Cursodis.CURSODIS.IDDISCIPLINAS;
    }

    @Override
    public Field<Integer> field3() {
        return Cursodis.CURSODIS.HORAS;
    }

    @Override
    public Integer component1() {
        return getIdcursos();
    }

    @Override
    public Integer component2() {
        return getIddisciplinas();
    }

    @Override
    public Integer component3() {
        return getHoras();
    }

    @Override
    public Integer value1() {
        return getIdcursos();
    }

    @Override
    public Integer value2() {
        return getIddisciplinas();
    }

    @Override
    public Integer value3() {
        return getHoras();
    }

    @Override
    public CursodisRecord value1(Integer value) {
        setIdcursos(value);
        return this;
    }

    @Override
    public CursodisRecord value2(Integer value) {
        setIddisciplinas(value);
        return this;
    }

    @Override
    public CursodisRecord value3(Integer value) {
        setHoras(value);
        return this;
    }

    @Override
    public CursodisRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CursodisRecord
     */
    public CursodisRecord() {
        super(Cursodis.CURSODIS);
    }

    /**
     * Create a detached, initialised CursodisRecord
     */
    public CursodisRecord(Integer idcursos, Integer iddisciplinas, Integer horas) {
        super(Cursodis.CURSODIS);

        setIdcursos(idcursos);
        setIddisciplinas(iddisciplinas);
        setHoras(horas);
    }
}
