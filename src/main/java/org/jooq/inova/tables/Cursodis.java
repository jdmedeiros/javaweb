/*
 * This file is generated by jOOQ.
 */
package org.jooq.inova.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.inova.Indexes;
import org.jooq.inova.Inova;
import org.jooq.inova.Keys;
import org.jooq.inova.tables.records.CursodisRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cursodis extends TableImpl<CursodisRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>inova.cursodis</code>
     */
    public static final Cursodis CURSODIS = new Cursodis();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CursodisRecord> getRecordType() {
        return CursodisRecord.class;
    }

    /**
     * The column <code>inova.cursodis.idcursos</code>.
     */
    public final TableField<CursodisRecord, Integer> IDCURSOS = createField(DSL.name("idcursos"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>inova.cursodis.iddisciplinas</code>.
     */
    public final TableField<CursodisRecord, Integer> IDDISCIPLINAS = createField(DSL.name("iddisciplinas"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>inova.cursodis.horas</code>.
     */
    public final TableField<CursodisRecord, Integer> HORAS = createField(DSL.name("horas"), SQLDataType.INTEGER, this, "");

    private Cursodis(Name alias, Table<CursodisRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cursodis(Name alias, Table<CursodisRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>inova.cursodis</code> table reference
     */
    public Cursodis(String alias) {
        this(DSL.name(alias), CURSODIS);
    }

    /**
     * Create an aliased <code>inova.cursodis</code> table reference
     */
    public Cursodis(Name alias) {
        this(alias, CURSODIS);
    }

    /**
     * Create a <code>inova.cursodis</code> table reference
     */
    public Cursodis() {
        this(DSL.name("cursodis"), null);
    }

    public <O extends Record> Cursodis(Table<O> child, ForeignKey<O, CursodisRecord> key) {
        super(child, key, CURSODIS);
    }

    @Override
    public Schema getSchema() {
        return Inova.INOVA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CURSODIS_FK_TABLE1_DISCIPLINAS1_IDX);
    }

    @Override
    public UniqueKey<CursodisRecord> getPrimaryKey() {
        return Keys.KEY_CURSODIS_PRIMARY;
    }

    @Override
    public List<UniqueKey<CursodisRecord>> getKeys() {
        return Arrays.<UniqueKey<CursodisRecord>>asList(Keys.KEY_CURSODIS_PRIMARY);
    }

    @Override
    public List<ForeignKey<CursodisRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CursodisRecord, ?>>asList(Keys.FK_TABLE1_CURSOS, Keys.FK_TABLE1_DISCIPLINAS1);
    }

    private transient Cursos _cursos;
    private transient Disciplinas _disciplinas;

    public Cursos cursos() {
        if (_cursos == null)
            _cursos = new Cursos(this, Keys.FK_TABLE1_CURSOS);

        return _cursos;
    }

    public Disciplinas disciplinas() {
        if (_disciplinas == null)
            _disciplinas = new Disciplinas(this, Keys.FK_TABLE1_DISCIPLINAS1);

        return _disciplinas;
    }

    @Override
    public Cursodis as(String alias) {
        return new Cursodis(DSL.name(alias), this);
    }

    @Override
    public Cursodis as(Name alias) {
        return new Cursodis(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cursodis rename(String name) {
        return new Cursodis(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cursodis rename(Name name) {
        return new Cursodis(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
